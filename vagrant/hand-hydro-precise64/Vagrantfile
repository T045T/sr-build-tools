# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

MEMORY = ENV['VAGRANT_MEMORY'] || '1024'
CORES = ENV['VAGRANT_CORES'] || '2'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "rosbase-hydro-precise64"
  config.vm.box_url = "http://TODO.example.com/rosbase-hydro-precise64.box"

  config.vm.hostname = "hand-hydro-precise64.box.local"

  config.ssh.forward_agent = true

  # Map a folder so we can access our puppet modules, in the default modulepath.
  config.vm.synced_folder "../../puppet/modules", "/usr/share/puppet/modules"

  # VirtualBox
  config.vm.provider :virtualbox do |vb|
      vb.gui = true
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", MEMORY.to_i]
      vb.customize ["modifyvm", :id, "--cpus", CORES.to_i]
  end

  # Provisioning with Puppet stand alone.
  #
  # First we run a small puppet job to prepare the machine for the full job,
  # installs modules into /etc/puppet/modules, on the default modulepath along
  # with the shared folder above..
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "../../puppet/manifests"
    puppet.manifest_file  = "puppet_bootstrap.pp"
  end
  # The main puppet provision
  # Note: Don't set module_path, handled by puppet_bootstrap.pp and sync folder.
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "../../puppet/manifests"
    puppet.manifest_file  = "vagrant.pp"
    #puppet.options        = "--verbose"
    puppet.facter = {
        # custom facts provided to Puppet
        "is_vagrant" => true,
    }
  end

end
