#!/bin/bash

#
# Jenkins build script to make and test a ros package. Pass the package name
# as the first arg, the package is also expected to be checked out into
# $WORKSPACE, which is what jenkins does.
# * Creates an overlay in $WORKSPACE of the installed ros and shadow dependancies.
# * Fixes test out put to be under jenkins workspace so jenkins can see it.
# * Fixes rostest rubbish xml out put (https://code.ros.org/trac/ros/ticket/3770)
# * Put ros logs into $WORKSPACE/logs so jenkins can see them.
# --mda
#

if [ ! "$#" == 2 ]; then
    echo Wrong number of arguments
    echo usage: $0 ROSVERSION PKGNAME
    exit 3
fi

export BUILD_ROS_VERSION=$1
export SR_PACKAGE=$2

# lp:sr-build-tools needs to be checked out somewhere
export SR_BUILD_TOOLS="$HOME/sr-build-tools"

if [ -z "$WORKSPACE" ]; then
    echo WORKSPACE is not set. Can\'t run. Not being run by Jenkins?
    exit 1
fi

set -x  # echo commands run

#PATH="$SR_BUILD_TOOLS/bin:$PATH"
#sr-bootstrap --ros=$BUILD_ROS_VERSION

ros_dir="/opt/ros/$BUILD_ROS_VERSION"
sr_rosinstall="$SR_BUILD_TOOLS/data/shadow_robot.rosinstall"
sr_ros="$HOME/shadow-ros-$BUILD_ROS_VERSION"
if [ ! -d "$ros_dir" ]; then
    echo Ros directory $ros_dir not found!
    echo Are you sure this is a valid version of ROS?
    echo Has this ros version been installed, ie slave bootstrapped properly?
    exit 10
fi
if [ ! -f "$sr_rosinstall" ]; then
    echo We don\'t have a ros install file for $sr_rosinstall!
    echo Looks like someone needs to update sr-build-tools.
    exit 10
fi
ros_install_opts="--continue-on-error"
rosinstall $ros_install_opts "$sr_ros" "$ros_dir" "$sr_rosinstall"
rosinstall $ros_install_opts "$WORKSPACE" "$sr_ros"

source "$WORKSPACE/setup.bash"
ROS_PACKAGE_PATH="$WORKSPACE:$ROS_PACKAGE_PATH"
export ROS_TEST_RESULTS_DIR="$WORKSPACE/test_results"
export ROS_LOG_DIR="$WORKSPACE/logs"

# --robust?
rosmake -t -v --profile "$SR_PACKAGE"
res=$?

# Write junit format XML test result for the build
# This makes the build visible in tests results and also stops failures for
# pkgs with not tests as no tests counts as a fail!
# http://stackoverflow.com/questions/4922867/junit-xml-format-specification-that-hudson-supports
# http://stackoverflow.com/questions/8697923/junit-xml-packages-in-hudson
test_pkg="rosmake"
if [ "$res" == 0 ]; then
    testcase="<testcase classname='$test_pkg.make' name='$SR_PACKAGE'/>"
else
    testcase="<testcase classname='$test_pkg.make' name='$SR_PACKAGE'>\n"
    testcase="$testcase<failure type='MakeFail'>rosmake status $res</failure>\n"
    testcase="$testcase</testcase>"
fi
junit_xml="<testsuite tests='1' name='$test_pkg'>\n    $testcase\n</testsuite>\n"
mkdir -p "$ROS_TEST_RESULTS_DIR/_hudson"
echo -e "$junit_xml" > "$ROS_TEST_RESULTS_DIR/_hudson/rosmake.xml"

rosrun rosunit clean_junit_xml.py

exit $res
