#!/usr/bin/env python

from pprint import PrettyPrinter
from datetime import datetime
import re, sys

from trello import TrelloApi

from github import Github

#
# Config
#

TRELLO_API_KEY = 'fillmein'
TRELLO_TOKEN = 'fillmein'
SHADOW_BOARD_ID = 'fnCbWCKD'

github_user = raw_input("Github user:")
github_password = raw_input("Github password:")

new_card_list_name = 'Backlog'

# Used to prefix the title of cards in trello linked to github. Title is
# fomatted as below. Only tickets with a title that match are processed by this
# script.
# <prefix>:<issue.id> <issue.title>
# TODO - Probably better to use a label.
card_github_prefix = 'Github'

#
# Connect and get lists, cards, issues etc
#

pp = PrettyPrinter(indent=4)

trello = TrelloApi(TRELLO_API_KEY, TRELLO_TOKEN)
# The TRELLO_TOKEN above is obtained by visiting this url in browser, while
# logged in to trello
#token_url = trello.get_token_url('Shadow Sync', expires='30days', write_access=True)
#print "Token url:%s"%token_url

github = Github(github_user, github_password)

#board = trello.boards.get(SHADOW_BOARD_ID)
#print "\n\n################ Boards ##################\n"
#pp.pprint(board)

# Get the lists (the stacks of cards, e.g. Current, Backlog etc) from Trello
lists = trello.boards.get_list(SHADOW_BOARD_ID)
new_card_list_id = None
#pp.pprint(lists)
lists_by_id = {}
for l in lists:
    lists_by_id[l['id']] = l
    print "Found list %s"%l['name']
    if l['name'] == new_card_list_name:
        new_card_list_id = l['id']

if new_card_list_id is None:
    print "ERROR: Couldn't find new card list: %s"%new_card_list_name
    sys.exit(10)

# Get the cards from Trello
# Filter to only the ones from github
all_cards = trello.boards.get_card(SHADOW_BOARD_ID)
#print "\n\n################ All Cards ##################\n"
#pp.pprint(all_cards)
cards = []
cards_by_github_issue_id = {}
for card in all_cards:
    m = re.search('^'+card_github_prefix+':(\d+) ', card['name'])
    if not m:
        continue
    cards.append(card)
    issue_id = m.group(1)
    list_name = lists_by_id[card['idList']]['name']
    print "Found card %s for git issue: '%s' in %s"%(card['id'], issue_id, list_name)
    cards_by_github_issue_id[str(issue_id)] = card

# Get the issue list from github
# This call appears to return only open tickets.
# TODO - and only tickets assigned to the login user, need them all!
org = github.get_organization('shadow-robot')
issues = org.get_issues()
issues_by_id = {}
for issue in issues:
    print "Github issue: " + str(issue.id) + " " + str(issue.title)
    issues_by_id[str(issue.id)] = issue


#
# Sync the Trello cards with github
#

# Add cards for new github tickets
for issue in issues:
    if str(issue.id) in cards_by_github_issue_id:
        continue
    card_name = card_github_prefix + ":" + str(issue.id) + " " + str(issue.title)
    print "Adding card: %s"%(card_name)
    trello.cards.new(card_name, new_card_list_id,
            desc=issue.body)

# Close cards where there are no more issues
for issue_id in cards_by_github_issue_id:
    if str(issue_id) not in issues_by_id:
        card_id = cards_by_github_issue_id[str(issue_id)]['id']
        print "Archiving card %s (issue %s)"%(card_id, issue_id)
        trello.cards.update_closed(card_id, "true")

# TODO - Sync labels/tags

# TODO - Sync users, ie set user on card based on git assigned.


