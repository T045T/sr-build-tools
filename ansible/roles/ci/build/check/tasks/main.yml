---
# Playbook for build dependencies check

- name: Read all packages paths in workspace
  shell: find -type f -name package.xml -printf "%h\n" chdir={{ros_workspace}}
  register: workspace_package_paths_list

#- name: Set variable to workaround ansible type evaluation issue
#  set_fact:
#    workspace_package_paths_list_stdout_lines: "{{workspace_package_paths_list.stdout_lines}}"

- name: DEBUG !!!
  set_fact:
    workspace_package_paths_list_stdout_lines: ["./src/host/workspaces/ros/test/cob_collision_velocity_filter"]

- name: Set variable to ros installation include paths
  set_fact:
    ros_installation_include_path: "/opt/ros/{{ros_release}}/include/"

- name: Set variable to ros installation include paths backup
  set_fact:
    ros_installation_include_path_backup: "/opt/ros/{{ros_release}}/include/backup"

- name: Remove backup directory if exists
  shell: rm -rf "{{ros_installation_include_path_backup}}"
  ignore_errors: True

- name: Create backup directory
  file: state=directory path={{ros_installation_include_path_backup}}

- name: Move all headers for workspace packages to backup
  shell: mv {{ros_installation_include_path}}/{{item|basename}} {{ros_installation_include_path_backup}}
  with_items: "{{workspace_package_paths_list_stdout_lines|default([])}}"
  ignore_errors: True

- name: catkin clean workspace directories
  file: path={{item}} state=absent
  with_items:
    - "{{ros_workspace}}/build"
    - "{{ros_workspace}}/devel"
    - "{{ros_workspace}}/install"
    - "{{ros_workspace}}/build_isolated"
    - "{{ros_workspace}}/devel_isolated"
    - "{{ros_workspace}}/install_isolated"

- name: Temporary file name
  set_fact:
    errors_file_name: "{{ros_workspace}}/check_build_errors.txt"

- name: Create empty file or clean existing one
  shell: bash -c "cat /dev/null > {{errors_file_name}}"

- name: catkin make each package in the workspace
  shell: bash -c "source /opt/ros/{{ros_release}}/setup.bash && echo 'Package {{item|basename}} ' >> {{errors_file_name}} &&  catkin_make --pkg {{item|basename}} 2>> {{errors_file_name}} && rm -rf source {{ros_workspace}}/build && rm -rf {{ros_workspace}}/devel"
    chdir={{ros_workspace}}
  with_items: "{{workspace_package_paths_list_stdout_lines|default([])}}"
  register: found_failed_package_dependencies
  ignore_errors: True
  no_log: True

- name: Revert backuped headers
  shell: mv {{ros_installation_include_path_backup}}/* {{ros_installation_include_path}}
  ignore_errors: True

- name: Remove backup directory if exists
  shell: rm -rf "{{ros_installation_include_path_backup}}"
  ignore_errors: True

- name: List errors of the builds
  shell: bash -c "cat {{errors_file_name}}"
  when: found_failed_package_dependencies|failed

- name: Fail in case of errors
  fail: msg="There are some errors in the packages dependencies"
  when: found_failed_package_dependencies|failed
