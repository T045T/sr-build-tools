---
# Finalising the python code coverage tasks (combining files and exporting to xml)

- name: Find all .coverage files in "{{ros_workspace}}"
  shell: cd `echo "{{repo_sources_path}}/{{item.path}}" | sed "s_{{ros_workspace}}/src/_{{ros_workspace}}/build/_"` && find `pwd` -type f -name .coverage -printf "%p "
  with_items: "{{repo_packages_list|default([])}}"
  register: coverage_paths_list

- name: Make coverage folder for each package that has coverage information
  file: state=directory path={{code_coverage_results_dir}}/{{item.item.name}}
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

- name: Combine the coverage files
  shell: bash -c 'coverage combine {{item.stdout}}' chdir={{code_coverage_results_dir}}/{{item.item.name}}
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

- name: Touch .coveragerc for all repos, creating it if necessary
  shell: touch "{{repo_sources_path}}/{{item.item.path}}/.coveragerc"
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

- name: Move .coveragerc files to coverage data folder
  shell: cp "{{repo_sources_path}}/{{item.item.path}}/.coveragerc" {{item.item.name}} chdir={{code_coverage_results_dir}}
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

- name: Generate xml coverage report
  shell: coverage xml -o coverage.python.xml --rcfile=.coveragerc chdir={{code_coverage_results_dir}}/{{item.item.name}}
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

- name: Get relative path from coverage dir to workspace
  shell: python -c "import os.path; print os.path.join('..', os.path.relpath('{{ repo_sources_path }}', '{{ code_coverage_results_dir }}'))"
  register: coverage_to_workspace_relative

- name: Replace paths in coverage report to be relative
  replace:
    path: "{{code_coverage_results_dir}}/{{item.item.name}}/coverage.python.xml"
    regex: "{{ repo_sources_path | regex_escape() }}"
    replace: "{{ coverage_to_workspace_relative }}"
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

- name: Replace paths in coverage report to be relative
  replace:
    path: "{{code_coverage_results_dir}}/{{item.item.name}}/coverage.python.xml"
    regex: "{{ repo_sources_path.replace('/', '.') | regex_escape() }}"
    replace: ""
  with_items: "{{ coverage_paths_list.results }}"
  when: item.stdout|length > 0

# - name: Replace paths in coverage report to be relative
#   shell: sed -i "s_{{ repo_sources_path.replace('_', '\_') }}_`python -c "import os.path; print os.path.relpath('{{ repo_sources_path }}', os.getcwd()).replace('_', '\_')"`_g" "coverage.python.xml" && sed -i "s_{{ repo_sources_path.replace('_', '\_').replace('/', '\.')}}.__g" "coverage.python.xml" chdir={{code_coverage_results_dir}}/{{item.item.name}}
#   with_items: "{{ coverage_paths_list.results }}"
#   when: item.stdout|length > 0
