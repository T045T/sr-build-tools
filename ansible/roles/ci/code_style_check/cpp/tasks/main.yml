---
# Playbook for C++ code style check

- name: check if repo_sources_path variable was set
  fail: msg="Variable repo_sources_path was not set"
  when: repo_sources_path is not defined

- name: Read all packages paths in repository
  shell: find -type f -name package.xml -printf "%h\n" chdir={{repo_sources_path}}
  register: package_paths_list

- name: Set variable to workaround ansible type evaluation issue
  set_fact:
    package_paths_list_stdout_lines: "{{package_paths_list.stdout_lines}}"

- name: Find C++ h and cpp files in each package
  shell: find -type f \( -name "*.h" -o -name "*.cpp" \) -printf "%p "
    chdir={{repo_sources_path}}/{{item}}
  with_items: "{{package_paths_list_stdout_lines|default([])}}"
  register: package_paths_and_h_cpp_files

- name: Set variable to workaround ansible type evaluation issue
  set_fact:
    package_paths_and_h_cpp_files_results: "{{package_paths_and_h_cpp_files.results}}"

- name: Execute roslint for every package and write results in unit tests format
  shell: bash -c "source /opt/ros/{{ros_release}}/setup.bash && rosrun roslint test_wrapper {{ros_workspace}}/build/test_results/{{item.item|basename}}/roslint-h-cpp-{{item.item|basename}}.xml 'rosrun roslint cpplint --filter=-runtime/references  {{item.stdout}}' "
    chdir={{repo_sources_path}}/{{item.item}}
  with_items: "{{package_paths_and_h_cpp_files_results|default([])}}"
  when: item.stdout != ""
  ignore_errors: True

- name: Find C++ hpp files in each package (this is done due to a of such file currently in source code. In future those file would be removed)
  shell: find -type f -name "*.hpp" -printf "%p\n"
    chdir={{repo_sources_path}}/{{item}}
  with_items: "{{package_paths_list_stdout_lines|default([])}}"
  register: package_paths_and_hpp_files

- name: Set variable to workaround ansible type evaluation issue
  set_fact:
    package_paths_and_hpp_files_results: "{{package_paths_and_hpp_files.results}}"

- name: Execute roslint for every package and write results in unit tests format. In order to skip hpp files extension validation using stdin feed to checker.
  shell: bash -c 'source /opt/ros/{{ros_release}}/setup.bash && rosrun roslint test_wrapper {{ros_workspace}}/build/test_results/{{item.0.item|basename}}/roslint-hpp-{{item.1|basename}}.xml "eval cat {{item.1}} | rosrun roslint cpplint --filter=-runtime/references -" '
    chdir={{repo_sources_path}}/{{item.0.item}}
  with_subelements:
     - "{{package_paths_and_hpp_files_results|default([])}}"
     - stdout_lines
  when: item.0.stdout != ""
  ignore_errors: True
