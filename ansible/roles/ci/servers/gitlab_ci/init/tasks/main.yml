---
# Playbook for Gitlab CI init code

- name: check if gitlab_repo_dir variable was set by build server
  fail: msg="Variable gitlab_repo_dir was not set by CI server"
  when: gitlab_repo_dir is not defined

- name: check if gitlab_test_dir variable was set by build server
  fail: msg="Variable gitlab_test_dir was not set by CI server"
  when: gitlab_test_dir is not defined

- name: check if gitlab_code_coverage_dir variable was set by build server
  fail: msg="Variable gitlab_code_coverage_dir was not set by CI server"
  when: gitlab_code_coverage_dir is not defined

- name: check if gitlab_lint_result_dir variable was set by build server
  fail: msg="Variable gitlab_lint_result_dir was not set by CI server"
  when: gitlab_lint_result_dir is not defined

- name: Set ros_workspace
  set_fact:
    ros_workspace: "{{ansible_env.HOME}}/workspace"

- name: Set upgrade_all_packages
  set_fact:
    upgrade_all_packages: no

- name: Set repository source code path
  set_fact:
    repo_sources_path: "{{ros_workspace}}/src/{{{{gitlab_repo_dir.split('/')[-1]}}}}"

- name: Remove source directory in case of caching
  shell: bash -c "rm -rf {{repo_sources_path}}"

- name: Create directory again
  file: state=directory path={{repo_sources_path}}

- name: Copy source directory from host machine
  shell: bash -c "shopt -s dotglob && mv {{gitlab_repo_dir}}/* {{repo_sources_path}}"

- name: Set test_results_dir
  set_fact:
    test_results_dir: "{{gitlab_test_dir}}"

- name: Set code_coverage_results_dir
  set_fact:
    code_coverage_results_dir: "{{gitlab_code_coverage_dir}}"

- name: Set lint_result_dir
  set_fact:
    lint_result_dir: "{{gitlab_lint_result_dir}}"

- name: Clean test results directory in case of failure during cache build
  shell: bash -c "rm -rf {{test_results_dir}}"

- name: Create tests directory
  file: state=directory path={{test_results_dir}}

- name: Clean coverage results directory in case of failure during cached build
  shell: bash -c "rm -rf {{code_coverage_results_dir}}"

- name: Create coverage directory
  file: state=directory path={{code_coverage_results_dir}}

- name: Clean lint result directory in case of failure during cached build
  shell: bash -c "rm -rf {{lint_result_dir}}"

- name: Create lint directory
  file: state=directory path={{lint_result_dir}}
