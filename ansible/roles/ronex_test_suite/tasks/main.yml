---
- name: Install packages
  apt: name={{item}}
  with_items:
    - python-pip
    - ccze
    - sqlite3
    - libpq-dev
    - python-dev
    - postgresql
    - postgresql-contrib
    - python-psycopg2

- name: Install Django 1.5
  shell: pip install Django==1.5

- name: Create shadow opt dir
  file: state=directory path={{shadow_opt}} owner={{ros_user}} group=ros

- name: Fix perms
  file: path={{shadow_opt}} recurse=yes owner={{ros_user}} group=ros

- name: Checkout the ronex serial db repository
  git: repo={{ronexserial_repo}} dest="{{ronexserial_installdir}}" accept_hostkey=True
  sudo: yes

- name: Fix perms
  file: path={{ronexserial_installdir}} recurse=yes owner={{ros_user}} group=ros

# This makes the eeprom command line tool we need for programming
- name: Build SOEM
  shell: bash -c "source {{ronexserial_installdir}}/SOEM1.3.0/setup.sh linux && make all"
    chdir="{{ronexserial_installdir}}/SOEM1.3.0"
  sudo: yes
  sudo_user: "{{ros_user}}"

- name: Create ~{{ros_user}}/logs dir
  file: state=directory path=~{{ros_user}}/logs owner={{ros_user}} group=ros

# So we can run without sudo and access the ethercat
- name: Setup soem for normal user
  shell: "setcap cap_sys_nice,cap_ipc_lock,cap_net_raw,cap_net_admin=eip {{ronexserial_installdir}}/ronexserial/bin/eepromtool"

- name: Create postgresql database
  sudo: yes
  sudo_user: postgres
  postgresql_db: name={{ronexserial_dbname}}

- name: Ensure user has access to database
  sudo: yes
  sudo_user: postgres
  postgresql_user:
    db={{ronexserial_dbname}}
    name={{ronexserial_dbuser}}
    password={{ronexserial_dbpassword}}
    priv=ALL

- name: Ensure user does not have unnecessary privilege
  sudo: yes
  sudo_user: postgres
  postgresql_user: name={{ronexserial_dbuser}}
    role_attr_flags=NOSUPERUSER,NOCREATEDB

- name: Generate dbsettings.py
  template: src=dbsettings.py.j2
    dest="{{ronexserial_installdir}}/ronexserial/ronexserial/dbsettings.py"
    owner={{ros_user}}
    mode=0644

- name: Syncdb
  command: python manage.py syncdb --noinput
    chdir={{ronexserial_installdir}}/ronexserial

# For some reason syncdb wont load this as model data, so we fudge it here.
# This is for the admin user that syncdb prompts for when run as a user.
- name: Boot strap auth admin user
  sudo: yes
  sudo_user: "{{ ros_user }}"
  shell: "cat {{ronexserial_installdir}}/ronexserial/serials/sql/auth.sql | python manage.py dbshell chdir={{ronexserial_installdir}}/ronexserial"

- name: Create autostart directory
  file: state=directory path="~{{ros_user}}/.config/autostart" owner={{ros_user}} group=ros

- name: Start server at login
  file: state=link
    src="~{{ros_user}}/Desktop/FlashRonex.desktop"
    dest="~{{ros_user}}/.config/autostart/FlashRonex.desktop"
    force=yes

- name: Start webui at login
  file: state=link
    src="~{{ros_user}}/Desktop/FlashRonexWebUi.desktop"
    dest="~{{ros_user}}/.config/autostart/FlashRonexWebUi.desktop"
    force=yes

