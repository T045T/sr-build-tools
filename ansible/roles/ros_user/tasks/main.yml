---
# Installs a ros user into the machine

# Install packages a ros user will need
- name: Install packages
  apt: name={{item}}
  with_items:
    - git
    - vim
    - emacs
    - tree
    - htop

# We put all users in the ros group, so they can work togther easily
- name: Add ros group
  group: name=ros

- name: Add {{ros_user}} user
  user: name={{ros_user}}
    comment="{{ros_user_comment}}"
    shell=/bin/bash
    append=yes groups=ros,adm,sudo,plugdev,cdrom

- name: Set users password
  shell: "echo '{{ros_user}}:{{ros_user_password}}' | chpasswd"

- name: Give user passwordless sudo.
  lineinfile: "dest=/etc/sudoers state=present regexp='^{{ros_user}}' line='{{ros_user}}  ALL=(ALL) NOPASSWD:  ALL' insertafter=EOF"

- name: Install global home directory files
  copy: src={{item}} dest=\~{{ros_user}}/ owner={{ros_user}} group=ros
  with_first_found:
    files:
      - files/home/all/
  when: item is defined and "{{item}}" != ""

- name: Install home directory files
  copy: src={{item}} dest=\~{{ros_user}}/ owner={{ros_user}} group=ros
  with_first_found:
    files:
      - files/home/{{ros_user}}/
  when: item is defined and "{{item}}" != ""

- name: Test for existing bashrc setup
  shell: grep '^source.*/setup\.bash' ~{{ros_user}}/.bashrc
  register: setup_test_result
  ignore_errors: true

# Add a source line to bashrc, only if there isn't already one
- name: Update bashrc to point to ROS {{ros_release}}
  lineinfile: dest=\~{{ros_user}}/.bashrc
              line="source /opt/ros/{{ros_release}}/setup.bash"
              regexp='^source.*/setup\.bash'
              insertafter=EOF
              backup=yes
  when: setup_test_result.rc != 0

- name: Update rosdep
  shell: bash -c "source /opt/ros/{{ros_release}}/setup.bash && rosdep update"
  sudo: yes
  sudo_user: "{{ros_user}}"

- name: Setup git name
  command: git config --global user.name "{{ros_user}}"

- name: Setup git email
  command: git config --global user.email "{{ros_user_email}}"

