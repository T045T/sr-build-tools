---
- hosts: all
  vars:
    # Where to find the build tools. Mounted by vagrant
    sr_build_tools: /opt/shadow/sr-build-tools
    ros_release: 'hydro'
    ros_user: 'hand'
    ros_user_comment: 'Shadow Hand'
    ros_user_password: 'hand'
    ros_user_email: 'software@shadowrobot.com'
    ros_workspace: "~{{ros_user}}/{{ros_release}}_ws"
    ros_workspace_install: "{{sr_build_tools}}/data/shadow_robot-{{ros_release}}.rosinstall"
  #remote_user: root
  sudo: yes
  roles:
  - ros_machine
  - ros_user
  tasks:
    # Workspace
    - name: Create workspace dir {{ros_workspace}}
      file: state=directory path={{ros_workspace}}/src owner={{ros_user}} group=ros
      sudo: yes
      sudo_user: "{{ros_user}}"

    - name: Init workspace
      command: wstool init .
        chdir={{ros_workspace}}/src
        creates={{ros_workspace}}/src/.rosinstall
      sudo: yes
      sudo_user: "{{ros_user}}"

    - name: catkin_init_workspace
      shell: bash -c "source /opt/ros/{{ros_release}}/setup.bash && catkin_init_workspace"
        chdir={{ros_workspace}}/src
        creates={{ros_workspace}}/src/CMakeLists.txt
      sudo: yes
      sudo_user: "{{ros_user}}"

    # Do an initial make of the empty workspace to get a setup.bash.
    # If there is one already don't do this, so we don't trigger a big make
    - name: catkin make workspace
      shell: bash -c "source /opt/ros/{{ros_release}}/setup.bash && catkin_make"
        chdir={{ros_workspace}}
        creates={{ros_workspace}}/devel/setup.bash
      sudo: yes
      sudo_user: "{{ros_user}}"

    - name: Update users basrc to point to the workspace
      lineinfile: dest=\~{{ros_user}}/.bashrc
                  line="source {{ros_workspace}}/devel/setup.bash"
                  regexp='^source.*/setup\.bash'
                  insertafter=EOF
                  backup=yes

    # Install the shadow code
    - name: Install {{ros_workspace_install}}
      shell: bash -c "{{item}}" chdir={{ros_workspace}}/src
      sudo: yes
      sudo_user: "{{ros_user}}"
      with_items:
        - wstool merge -y "{{ros_workspace_install}}"
        - wstool update

    - name: Install dependancies
      shell: bash -c "source {{ros_workspace}}/devel/setup.bash && rosdep install --default-yes --all --ignore-src"
             chdir={{ros_workspace}}
      sudo: yes
      sudo_user: "{{ros_user}}"

    - name: catkin_make
      shell: bash -c "source {{ros_workspace}}/devel/setup.bash && catkin_make"
        chdir={{ros_workspace}}
      sudo: yes
      sudo_user: "{{ros_user}}"

  # Note: Handlers only fire after all the taks. Once for however many notifies
  #    notify:
  #    - restart ntpd
  handlers:
  #  - name: restart ntpd
  #    service: name=ntpd state=restarted

